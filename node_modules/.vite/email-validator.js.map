{
  "version": 3,
  "sources": ["../email-validator/index.js", "dep:email-validator"],
  "sourcesContent": ["\"use strict\";\r\n\r\nvar tester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\r\n// Thanks to:\r\n// http://fightingforalostcause.net/misc/2006/compare-email-regex.php\r\n// http://thedailywtf.com/Articles/Validating_Email_Addresses.aspx\r\n// http://stackoverflow.com/questions/201323/what-is-the-best-regular-expression-for-validating-email-addresses/201378#201378\r\nexports.validate = function(email)\r\n{\r\n\tif (!email)\r\n\t\treturn false;\r\n\t\t\r\n\tif(email.length>254)\r\n\t\treturn false;\r\n\r\n\tvar valid = tester.test(email);\r\n\tif(!valid)\r\n\t\treturn false;\r\n\r\n\t// Further checking of some things regex can't handle\r\n\tvar parts = email.split(\"@\");\r\n\tif(parts[0].length>64)\r\n\t\treturn false;\r\n\r\n\tvar domainParts = parts[1].split(\".\");\r\n\tif(domainParts.some(function(part) { return part.length>63; }))\r\n\t\treturn false;\r\n\r\n\treturn true;\r\n}", "export default require(\"./node_modules/email-validator/index.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAEA,QAAI,SAAS;AAKb,YAAQ,WAAW,SAAS,OAC5B;AACC,UAAI,CAAC;AACJ,eAAO;AAER,UAAG,MAAM,SAAO;AACf,eAAO;AAER,UAAI,QAAQ,OAAO,KAAK;AACxB,UAAG,CAAC;AACH,eAAO;AAGR,UAAI,QAAQ,MAAM,MAAM;AACxB,UAAG,MAAM,GAAG,SAAO;AAClB,eAAO;AAER,UAAI,cAAc,MAAM,GAAG,MAAM;AACjC,UAAG,YAAY,KAAK,SAAS,MAAM;AAAE,eAAO,KAAK,SAAO;AAAA;AACvD,eAAO;AAER,aAAO;AAAA;AAAA;AAAA;;;AC5BR,IAAO,0BAAQ;",
  "names": []
}
